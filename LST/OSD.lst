C51 COMPILER V9.54   OSD                                                                   10/20/2015 11:39:07 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE OSD
OBJECT MODULE PLACED IN .\OBJ\OSD.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE OSD.C OPTIMIZE(9,SIZE) REGFILE(.\OBJ\TEST_CVRI.ORC) BROWSE NOAREGS PRINT
                    -(.\LST\OSD.lst) TABS(2) OBJECT(.\OBJ\OSD.obj)

line level    source

   1          /* **********************************************************************
   2          
   3                   Copyright (c) 2002-2013 Beyond Innovation Technology Co., Ltd
   4          
   5                   All rights are reserved. Reproduction in whole or in parts is
   6              prohibited without the prior written consent of the copyright owner.
   7          
   8             ----------------------------------------------------------------------
   9              Software License Agreement
  10          
  11              The software supplied herewith by Beyond Innovation Technology Co., Ltd
  12              (the "Company") is intended and supplied to you, the Company's
  13              customer, for use solely and exclusively on BiTEK products.
  14          
  15              The software is owned by the Company and/or its supplier, and is
  16              protected under applicable copyright laws. All rights are reserved.
  17              Any use in violation of the foregoing restrictions may subject the
  18              user to criminal sanctions under applicable laws, as well as to
  19              civil liability for the breach of the terms and conditions of this
  20              license.
  21          
  22              THIS SOFTWARE IS PROVIDED IN AN "AS IS" CONDITION. NO WARRANTIES,
  23              WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED
  24              TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  25              PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. THE COMPANY SHALL NOT,
  26              IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL OR
  27              CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  28          
  29             ----------------------------------------------------------------------
  30          
  31              Module: OSD.C
  32          
  33              Purpose: Implementation of OSD module.
  34          
  35              Version: 0.01                                   06:50PM  2013/03/20
  36          
  37              Compiler: Keil 8051 C Compiler v9.51
  38          
  39              Reference:
  40          
  41             ----------------------------------------------------------------------
  42              Modification:
  43          
  44              v0.01 06:50PM  2013/03/20 Jeffrey Chang
  45              Reason:
  46                  1. Original.
  47              Solution:
  48          
  49             ********************************************************************** */
  50          
  51          
  52          #define _OSD_C_
  53          
  54          /* ------------------------------------
C51 COMPILER V9.54   OSD                                                                   10/20/2015 11:39:07 PAGE 2   

  55              Header Files
  56             ------------------------------------ */
  57          #include "bit1618c.h"
  58          #include "bitek.h"
  59          #include "osd.h"
  60          
  61          
  62          /* ------------------------------------
  63              Macro Definitions
  64             ------------------------------------ */
  65          
  66          
  67          
  68          #if (PROGRESS_BAR == PROGRESS_TV)
  69              // PROGRESS_TV
  70              #define FONT_EMPTY      FONT_00_DASH_0
  71              #define FONT_FULL       FONT_03_DASH_3
  72              #define BAR_WIDTH       20
  73              #define BAR_STEP        3              // The bar has 3 steps.
  74          #elif (PROGRESS_BAR == PROGRESS_PC)
                  // PROGRESS_PC
                  #define FONT_EMPTY      FONT_10_BAR_0
                  #define FONT_FULL       FONT_16_BAR_6
                  #define BAR_WIDTH       17             //
                  #define BAR_STEP        6              // The bar has 6 steps.
              #endif
  81          
  82          
  83          
  84          /* ------------------------------------
  85              Type Definitions
  86             ------------------------------------ */
  87          
  88          /* ------------------------------------
  89              Variables Definitions
  90             ------------------------------------ */
  91          
  92          
  93          /* ------------------------------------
  94              Function Prototypes
  95             ------------------------------------ */
  96          
  97          
  98          /* -------------------------------------------------------------------
  99              Name: OSD_Init -
 100              Purpose: To initialize OSD module.
 101              Passed: None.
 102              Returns: None.
 103              Notes:
 104             ------------------------------------------------------------------- */
 105          void OSD_Init (void)
 106          {
 107   1          fOSD_Vanish = FALSE;
 108   1      
 109   1      
 110   1          // OSD must be OFF during accessing OSDPAT RAM !
 111   1      
 112   1          // OSDPAT_BANK_SEL (0x12E) = BANK0, OSDPAT_R
 113   1          BITEK_TxByte(BITEK_12E_OSDPAT_ATTR, BITEK_MASK_OSDPAT_R);
 114   1          // Setup Palette R !
 115   1          BITEK_TxBurst(BITEK_300_3FF_OSDPAT, sizeof(abOSD_PALETTE_R), abOSD_PALETTE_R);
 116   1      
C51 COMPILER V9.54   OSD                                                                   10/20/2015 11:39:07 PAGE 3   

 117   1          // OSDPAT_BANK_SEL (0x12E) = BANK0, OSDPAT_G
 118   1          BITEK_TxByte(BITEK_12E_OSDPAT_ATTR, BITEK_MASK_OSDPAT_G);
 119   1          // Setup Palette G !
 120   1          BITEK_TxBurst(BITEK_300_3FF_OSDPAT, sizeof(abOSD_PALETTE_G), abOSD_PALETTE_G);
 121   1      
 122   1          // OSDPAT_BANK_SEL (0x12E) = BANK0, OSDPAT_B
 123   1          BITEK_TxByte(BITEK_12E_OSDPAT_ATTR, BITEK_MASK_OSDPAT_B);
 124   1          // Setup Palette B !
 125   1          BITEK_TxBurst(BITEK_300_3FF_OSDPAT, sizeof(abOSD_PALETTE_B), abOSD_PALETTE_B);
 126   1      
 127   1          // OSDPAT_BANK_SEL (0x12E) = BANK0, OSDPAT_A
 128   1          BITEK_TxByte(BITEK_12E_OSDPAT_ATTR, BITEK_MASK_OSDPAT_A);
 129   1          // Setup Palette ATTRIBUTE !
 130   1          BITEK_TxBurst(BITEK_300_3FF_OSDPAT, sizeof(abOSD_PALETTE_A), abOSD_PALETTE_A);
 131   1      
 132   1      
 133   1          // OSD_BANK_SEL (0x12F) = BANK0
 134   1          BITEK_TxByte(BITEK_12F_OSD_ATTR, BITEK_MASK_OSD_BANK0);
 135   1      
 136   1        // OSD Code
 137   1          BITEK_TxRepeat(VP_SHOW_OSD0, OSD0_AREA, ' ');
 138   1          BITEK_TxRepeat(VP_SHOW_OSD1, OSD1_AREA, ' ');
 139   1          BITEK_TxRepeat(VP_SHOW_OSD2, OSD2_AREA, ' ');
 140   1      
 141   1      
 142   1          // OSD Attr
 143   1          BITEK_TxRepeat(VP_ATTR_OSD0, OSD0_AREA, OSD0_NM_ATTR);
 144   1          BITEK_TxRepeat(VP_ATTR_OSD1, OSD1_AREA, OSD1_NM_ATTR);
 145   1          BITEK_TxRepeat(VP_ATTR_OSD2, OSD2_AREA, OSD2_NM_ATTR);
 146   1      
 147   1          // Setup OSD0
 148   1          BITEK_TxBurst(BITEK_100105_OSD0_X, sizeof(abOSD0_Setup), abOSD0_Setup);
 149   1      
 150   1          // Setup OSD1
 151   1          BITEK_TxBurst(BITEK_110115_OSD1_X, sizeof(abOSD1_Setup), abOSD1_Setup);
 152   1      
 153   1          // Setup OSD2
 154   1          BITEK_TxBurst(BITEK_120125_OSD2_X, sizeof(abOSD2_Setup), abOSD2_Setup);
 155   1      } /* OSD_Init */
 156          
 157          
 158          
 159          #if (OSD_SHOW_HEX)
 160          /* -------------------------------------------------------------------
 161              Name: OSD_ShowHex -
 162              Purpose: To show one byte value in hexadecimal format at
 163                  specified position of OSD window.
 164              Passed:
 165              Returns: None.
 166              Notes:
 167             ------------------------------------------------------------------- */
 168          void OSD_ShowHex (
 169          UW16 wREG,          /* BITEK register address */
 170          UB8  bDATA          /* DATA item (0..255) */
 171          )
 172          {
 173   1      
 174   1          //////////////////////////////////////////////////////////////////
 175   1          // High Nibble
 176   1          bByte = bDATA / 16;
 177   1          if (bByte < 10)
 178   1              bByte += '0';
C51 COMPILER V9.54   OSD                                                                   10/20/2015 11:39:07 PAGE 4   

 179   1          else
 180   1              bByte = (bByte - 10) + 'A';
 181   1      
 182   1          BITEK_TxByte(wREG, bByte);
 183   1          wREG++;
 184   1      
 185   1          // Low Nibble
 186   1          bByte = bDATA % 16;
 187   1          if (bByte < 10)
 188   1              bByte += '0';
 189   1          else
 190   1              bByte = (bByte - 10) + 'A';
 191   1      
 192   1          BITEK_TxByte(wREG, bByte);
 193   1          //////////////////////////////////////////////////////////////////
 194   1      
 195   1      } /* OSD_ShowHex */
 196          #endif
 197          
 198          
 199          #if (OSD_SHOW_PROGRESS_BAR)
 200          /* -------------------------------------------------------------------
 201              Name: OSD_ShowProgressBar -
 202              Purpose: To display a progress bar at specified position in OSD window.
 203              Passed:
 204                  UW16 wREG   = BITEK Register address.
 205                  UB8  bDATA  = One word transmitted data.
 206              Returns: None.
 207              Notes:
 208             ------------------------------------------------------------------- */
 209          void OSD_ShowProgressBar (
 210          UW16 wREG,          /* BITEK register address */
 211          UB8  bDATA          /* DATA value */
 212          )
 213          {
 214   1      #if (PROGRESS_BAR == PROGRESS_TV)
 215   1      
 216   1      
 217   1          //////////////////////////////////////////////////////////////////
 218   1        //bDATA *= 2;     // 0..60
 219   1      
 220   1          for (bByte = BAR_WIDTH; bByte; bByte--)
 221   1          {
 222   2              if (bDATA >= BAR_STEP)
 223   2              {
 224   3                  BITEK_TxByte(wREG, FONT_FULL);
 225   3      
 226   3                  bDATA -= BAR_STEP;
 227   3              }
 228   2              else
 229   2              {
 230   3                  BITEK_TxByte(wREG, bDATA + FONT_EMPTY);
 231   3      
 232   3                  bDATA = 0;
 233   3              }
 234   2      
 235   2              wREG++;
 236   2          }
 237   1          //////////////////////////////////////////////////////////////////
 238   1      
 239   1      
 240   1      #elif (PROGRESS_BAR == PROGRESS_PC)
C51 COMPILER V9.54   OSD                                                                   10/20/2015 11:39:07 PAGE 5   

              
              
                //////////////////////////////////////////////////////////////////
                //bDATA *= 4;     // 0..120
              
                  BITEK_TxByte(wREG, FONT_5B_BAR_LEFT);
                  wREG++;
              
                  if (bDATA)
                      bDATA += 2;
              
                  for (bByte = BAR_WIDTH; bByte; bByte--)
                  {
                      if (bDATA >= BAR_STEP)
                      {
                          BITEK_TxByte(wREG, FONT_FULL);
              
                          bDATA -= BAR_STEP;
                      }
                      else
                      {
                          BITEK_TxByte(wREG, bDATA + FONT_EMPTY);
              
                          bDATA = 0;
                      }
              
                      wREG++;
                  }
              
                  BITEK_TxByte(wREG, FONT_5D_BAR_RIGHT);
                  //////////////////////////////////////////////////////////////////
              
              #endif
 274   1      } /* OSD_ShowProgressBar */
 275          #endif
 276          
 277          
 278          
 279          #if (OSD_SHOW_VALUE)
 280          /* -------------------------------------------------------------------
 281              Name: OSD_ShowValue -
 282              Purpose: To show 16-bit word (5-digit).
 283              Passed:
 284                  UW16    wREG   = BITEK Register address.
 285                  UUW16   wDATA  = One word transmitted data (0..65535).
 286                  UUW16   wMask  = 10000 (5-digit), 1000 (4-digit)
 287              Returns: None.
 288              Notes:
 289                  1) wDATA <= 9 * wMask
 290                  12345 OK
 291                   1234
 292                    123
 293                     12
 294                      1
 295                      0 OK
 296                    105
 297             ------------------------------------------------------------------- */
 298          void OSD_ShowValue (
 299          UW16 wREG,              /* BITEK register address */
 300          UW16 wDATA,             /* DATA item */
 301          UW16 wMask,
 302          UB8  bBlank             // '0', '-' or ' '
C51 COMPILER V9.54   OSD                                                                   10/20/2015 11:39:07 PAGE 6   

 303          )
 304          {
 305   1          #if 0
                  if (bBlank == '0')
                      fLeading = TRUE;
                  else
                      fLeading = FALSE;       // ' ' or '-'
              
              
                  for (wWord = wMask; wWord; wWord /= 10)
                  {
                      bByte = wDATA / wWord;
              
                      if (fLeading        ||
                          bByte           ||
                      (wWord == 1)         )
                      {
                          bByte += '0';
                          fLeading = TRUE;
                      }
                      else
                      {
                          bByte = bBlank;
                      }
              
              
                      BITEK_TxByte(wREG, bByte);
                      wREG++;
              
                      wDATA %= wWord;
                  }
                  #endif
 335   1      
 336   1          for (wWord = wMask; wWord; wWord /= 10)
 337   1          {
 338   2              bByte = wDATA / wWord;
 339   2      
 340   2              if ((bBlank == '0') ||
 341   2                  bByte           ||
 342   2              (wWord == 1)         )
 343   2              {
 344   3                  bByte += '0';
 345   3                  bBlank = '0';
 346   3              }
 347   2              else
 348   2              {
 349   3                  bByte = bBlank;
 350   3              }
 351   2      
 352   2      
 353   2              BITEK_TxByte(wREG, bByte);
 354   2              wREG++;
 355   2      
 356   2              wDATA %= wWord;
 357   2          }
 358   1      } /* OSD_ShowValue */
 359          #endif
 360          
 361          
 362          /* -------------------------------------------------------------------
 363              Name:  -
 364              Purpose: .
C51 COMPILER V9.54   OSD                                                                   10/20/2015 11:39:07 PAGE 7   

 365              Passed: None.
 366              Returns: None.
 367              Notes:
 368             ------------------------------------------------------------------- */
 369          
 370          
 371          /* **********************************************************************
 372          
 373              Description:
 374          
 375          
 376             ********************************************************************** */
 377          
 378          /* %% End Of File %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    387    ----
   CONSTANT SIZE    =     75    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
