C51 COMPILER V9.54   MCU                                                                   10/20/2015 11:39:07 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MCU
OBJECT MODULE PLACED IN .\OBJ\MCU.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE MCU.C OPTIMIZE(9,SIZE) REGFILE(.\OBJ\TEST_CVRI.ORC) BROWSE NOAREGS PRINT
                    -(.\LST\MCU.lst) TABS(2) OBJECT(.\OBJ\MCU.obj)

line level    source

   1          /* **********************************************************************
   2          
   3                   Copyright (c) 2002-2013 Beyond Innovation Technology Co., Ltd
   4          
   5                  All rights are reserved. Reproduction in whole or in parts is
   6              prohibited without the prior written consent of the copyright owner.
   7          
   8             ----------------------------------------------------------------------
   9              Software License Agreement
  10          
  11              The software supplied herewith by Beyond Innovation Technology Co., Ltd
  12              (the "Company") is intended and supplied to you, the Company's
  13              customer, for use solely and exclusively on BiTEK products.
  14          
  15              The software is owned by the Company and/or its supplier, and is
  16              protected under applicable copyright laws. All rights are reserved.
  17              Any use in violation of the foregoing restrictions may subject the
  18              user to criminal sanctions under applicable laws, as well as to
  19              civil liability for the breach of the terms and conditions of this
  20              license.
  21          
  22              THIS SOFTWARE IS PROVIDED IN AN "AS IS" CONDITION. NO WARRANTIES,
  23              WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED
  24              TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  25              PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. THE COMPANY SHALL NOT,
  26              IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL OR
  27              CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  28          
  29             ----------------------------------------------------------------------
  30          
  31              Module: MCU.C
  32          
  33              Purpose: Implementation of MCU.
  34          
  35              Version: 0.01                                   07:26PM  2013/03/16
  36          
  37              Compiler: Keil 8051 C Compiler v9.51
  38          
  39              Reference:
  40              [1] BIT5101 8051 MICROCONTROLLER WITH 64K FLASH AND ISP Version 0.01,
  41                  2004/10/25, Beyond Innovation Technology
  42              [2] TP2804  8051 MICROCONTROLLER WITH 64K FLASH AND ISP Version 1.2,
  43                  June 2004, TOPRO
  44              [3] MPC89x58A 8-bit MICRO-CONTROLLER Version A9,
  45                  2006/08, Megawin Technology Co., Ltd.
  46          
  47             ----------------------------------------------------------------------
  48              Modification:
  49          
  50              v0.01 07:26PM  2013/03/16 Jeffrey Chang
  51              Reason:
  52                  1. Original.
  53              Solution:
  54          
C51 COMPILER V9.54   MCU                                                                   10/20/2015 11:39:07 PAGE 2   

  55             ********************************************************************** */
  56          
  57          
  58          #define  _MCU_C_
  59          
  60          /* ------------------------------------
  61              Header Files
  62             ------------------------------------ */
  63          #include "bit1618c.h"
  64          #include "bitek.h"
  65          #include "mcu.h"
  66          #include "osd.h"
  67          #include "saradc.h"
  68          #include "timer.h"
  69          #include "vp.h"
  70          
  71          
  72          /* ------------------------------------
  73              Macro Definitions
  74             ------------------------------------ */
  75          
  76          /* ------------------------------------
  77              Type Definitions
  78             ------------------------------------ */
  79          
  80          
  81          /* ------------------------------------
  82              Variables Definitions
  83             ------------------------------------ */
  84          
  85          /* ------------------------------------
  86              Function Prototypes
  87             ------------------------------------ */
  88          
  89          /* -------------------------------------------------------------------
  90              Name: MCU_Init -
  91              Purpose: To initialize MCU module.
  92              Passed: None.
  93              Returns: None.
  94              Notes:
  95             ------------------------------------------------------------------- */
  96          void MCU_Init (void)
  97          {
  98   1          fVD_NoSignal    = TRUE;
  99   1          bMCU_BL_Cnt     = BL_START;
 100   1          bVD_STD_Cnt     = STD_START;
 101   1      } /* MCU_Init */
 102          
 103          
 104          /* -------------------------------------------------------------------
 105              Name: MCU_INT0_ISR -
 106              Purpose: INT0 Interrupt Service Routine (ISR).
 107              Passed: None
 108              Returns: None.
 109              Notes:
 110          
 111              Reference: [2]19
 112             ------------------------------------------------------------------- */
 113          void MCU_INT0_ISR (void) interrupt 0    using 1
 114          {
 115   1          UB8 bINT0;
 116   1      
C51 COMPILER V9.54   MCU                                                                   10/20/2015 11:39:07 PAGE 3   

 117   1      
 118   1          bINT0 = BITEK_RxByte(BITEK_002_INT0_FLAG_O);
 119   1      
 120   1          if (bINT0 & BITEK_MASK_FLAG0_VD_SIGNALREADY)
 121   1          {
 122   2              fVD_NoSignal    = FALSE;
 123   2              bVD_STD_Cnt     = STD_START;
 124   2      
 125   2              // R0CD[6]=1
 126   2              BITEK_TxByte(BITEK_0CD_DCLAMP_ATTR1, BITEK_RxByte(BITEK_0CD_DCLAMP_ATTR1) | BITEK_MASK_DCLAMP_STAB
             -LE_EN);
 127   2          }
 128   1      
 129   1      
 130   1          #if (SARADC_INT)
 131   1          if (bINT0 & BITEK_MASK_FLAG0_ADC)
 132   1          {
 133   2              // Check SARADC1/2/3
 134   2              bSARADC_VR_Flag = BITEK_RxByte(BITEK_1AC_SARADC_INFO) & 0x07;
 135   2      
 136   2              OSD_ShowHex(VP_SHOW_OSD1_ROW6 + 3, bSARADC_VR_Flag);
 137   2      
 138   2      
 139   2              #if (DEBUG_MCU)
 140   2              bMCU_INT0_Cnt++;
 141   2              #endif
 142   2      
 143   2          }
 144   1          #endif
 145   1      
 146   1      
 147   1      
 148   1          MCU_INT0_RESET();
 149   1      } /* MCU_INT0_ISR */
 150          
 151          
 152          /* -------------------------------------------------------------------
 153              Name: MCU_INT0_RESET -
 154              Purpose: To reset INT0.
 155              Passed: None.
 156              Returns: None.
 157              Notes:
 158             ------------------------------------------------------------------- */
 159          void MCU_INT0_RESET (void)
 160          {
 161   1          BITEK_TxByte(BITEK_003_INT0_MASK, 0xFF);
 162   1      
 163   1          // ACK SARADC
 164   1          BITEK_TxByte(BITEK_1A9_ADC_INT_ATTR, 0x07);
 165   1      
 166   1          // ACK KEY
 167   1        //BITEK_TxByte(BITEK_18E_KEY_ACK, 0x00);
 168   1      
 169   1          BITEK_TxByte(BITEK_004_INT0_ACK, 0x00);
 170   1          BITEK_TxByte(BITEK_004_INT0_ACK, INT0_ACK);
 171   1      
 172   1          // ACK KEY
 173   1        //BITEK_TxByte(BITEK_18E_KEY_ACK, 0xFC);
 174   1      
 175   1          // ACK SARADC
 176   1          BITEK_TxByte(BITEK_1A9_ADC_INT_ATTR, 0x70);
 177   1      
C51 COMPILER V9.54   MCU                                                                   10/20/2015 11:39:07 PAGE 4   

 178   1          BITEK_TxByte(BITEK_003_INT0_MASK, 0x00);
 179   1      } /* MCU_INT0_RESET */
 180          
 181          
 182          /* -------------------------------------------------------------------
 183              Name: MCU_INT1_ISR -
 184              Purpose: INT1 Interrupt Service Routine (ISR).
 185              Passed: None
 186              Returns: None.
 187              Notes:
 188          
 189              Reference: [2]19
 190             ------------------------------------------------------------------- */
 191          void MCU_INT1_ISR (void) interrupt 2    using 2
 192          {
 193   1          UB8 bINT1;
 194   1      
 195   1      
 196   1          bINT1 = BITEK_RxByte(BITEK_005_INT1_FLAG_O);
 197   1      
 198   1          if (bINT1 & BITEK_MASK_FLAG1_VD_NOSIGNAL)
 199   1          {
 200   2              fVD_NoSignal    = TRUE;
 201   2              bVD_STD_Cnt     = STD_START;
 202   2      
 203   2              // R0CD[6]=0
 204   2              BITEK_TxByte(BITEK_0CD_DCLAMP_ATTR1, BITEK_RxByte(BITEK_0CD_DCLAMP_ATTR1) & ~BITEK_MASK_DCLAMP_STA
             -BLE_EN);
 205   2          }
 206   1      
 207   1          if (bINT1 & BITEK_MASK_FLAG1_VD_STANDARD)
 208   1          {
 209   2              if (! fVD_NoSignal)
 210   2                  bVD_STD_Cnt = STD_START;
 211   2          }
 212   1      
 213   1          #if (DEBUG_MCU)
 214   1          bMCU_INT1_Cnt++;
 215   1          #endif
 216   1      
 217   1          MCU_INT1_RESET();
 218   1      } /* MCU_INT1_ISR */
 219          
 220          
 221          /* -------------------------------------------------------------------
 222              Name: MCU_INT1_RESET -
 223              Purpose: To reset INT0.
 224              Passed: None.
 225              Returns: None.
 226              Notes:
 227             ------------------------------------------------------------------- */
 228          void MCU_INT1_RESET (void)
 229          {
 230   1          BITEK_TxByte(BITEK_006_INT1_MASK, 0xFF);
 231   1      
 232   1      
 233   1          // ACK KEY
 234   1        //BITEK_TxByte(BITEK_18E_KEY_ACK, 0x00);
 235   1      
 236   1          BITEK_TxByte(BITEK_007_INT1_ACK, 0x00);
 237   1          BITEK_TxByte(BITEK_007_INT1_ACK, INT1_ACK);
 238   1      
C51 COMPILER V9.54   MCU                                                                   10/20/2015 11:39:07 PAGE 5   

 239   1          // ACK KEY
 240   1        //BITEK_TxByte(BITEK_18E_KEY_ACK, 0xFC);
 241   1      
 242   1      
 243   1          BITEK_TxByte(BITEK_006_INT1_MASK, 0x00);
 244   1      } /* MCU_INT1_RESET */
 245          
 246          
 247          /* -------------------------------------------------------------------
 248              Name: MCU_SETUP_INT -
 249              Purpose: To setup interrupt.
 250              Passed: None.
 251              Returns: None.
 252              Notes:
 253             ------------------------------------------------------------------- */
 254          void MCU_SETUP_INT (void)
 255          {
 256   1          BITEK_TxByte(BITEK_008_INT_ATTR, INT_ATTR);
 257   1      
 258   1          MCU_INT0_RESET();
 259   1          MCU_INT1_RESET();
 260   1      
 261   1          IP      = SFR_IP;
 262   1          TCON    = SFR_TCON;
 263   1          T2CON   = SFR_T2CON;
 264   1          IE      = INT_ON;
 265   1      } /* MCU_SETUP_INT */
 266          
 267          
 268          
 269          /* **********************************************************************
 270          
 271              Description:
 272          
 273          
 274             ********************************************************************** */
 275          
 276          /* %% End Of File %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    212    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
